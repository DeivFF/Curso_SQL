/* EU DIVIDI A TRANSFORMAÇÃO DA BASE DE DADOS EM PARTES, SENDO ELAS:

	CRIAÇÃO DOS ESQUEMAS, ESQUEMAS SÃO UM TIPO DE COMPARTIMENTO QUE GUARDAM AS TABELAS, POR EXEMPLO:
	ESQUEMA 'PESSOA', GUARDA AS TABELAS RELACIONADAS A PESSOA, ESQUEMA 'VENDAS' GUARDA INFORMAÇÕES SOBRE VENDAS...

	A SEGUNDA PARTE FOI REPLICAR A TABELA UTILIZANDO A CLÁUSULA 'SELECT INTO', NOS CASOS EM QUE UMA DETERMINADA COLUNA ESTAVA EM INGLES,
	EU ABRI A CLÁUSULA 'CASE' E FIZ AS CONDIÇÕES, TRANSFORMANDO OS VALORES PARA O PORTUGUES.

	EU UTILIZEI O SITE https://dataedo.com/samples/iframe/index.html#content/tables E O PRÓPRIO BANCO DE DADOS ADVENTURWORKS2017 PARA ME GUIAR
	NA CRIAÇÃO DAS TABELAS E RELACIONAMENTOS.

*/

-- VAMOS INICIALMENTE CRIAR UM BANCO DE DADOS

CREATE DATABASE AdventureWorksPT

 --- EXEMPLO DE TRANSFORMAÇÃO DE TABELA

 -- A SINTAXE BÁSICA PARA REPLICAR UMA TABELA JÁ EXISTENTE EM OUTRA TABELA É A INSTRUÇÃO ABAIXO.
 SELECT NOME_COLUNA_TABELA_ORIGINAL AS NOME_COLUNA_DA_NOVA_TABELA,
		NOME_COLUNA_TABELA_ORIGINAL AS NOME_COLUNA_DA_NOVA_TABELA
 INTO	BANCO_DE_DADOS_DESTINO.dbo.NOME_DA_NOVA_TABELA
 FROM	NOME_DA_NOVA_TABELA
 -- OBS: É NECESSÁRIO ESTÁ NO BANCO DE DADOS DA ORIGEM DA TABELA PARA REALIZAR ESSE PROCEDIMENTO

 -- VAMOS A UM EXEMPLO PRÁTICO

SELECT StateProvinceID AS IDEstadoProvincia, -- A COLUNA StateProvinceID SE CHAMARÁ IDEstadoProvincia NA NOVA TABELA
    StateProvinceCode AS CodigoEstadoProvincia,
    CountryRegionCode AS CodigoPaisRegiao,
    IsOnlyStateProvinceFlag AS EstadoProvinciaUnico,
    Name AS Nome,
    TerritoryID AS IDTerritorio,
    ModifiedDate AS DataModificacao
INTO AdventureWorksPT.dbo.EstadoProvincia -- O banco de dados destino se chama "AdventureWorksPT", criará a tabela EstadoProvincia
FROM Person.StateProvince -- A nova tabela será criada através da tabela StateProvince que está dentro do esquema Person.

-- AGORA NÓS IREMOS CRIAR UM ESQUEMA, PARA CRIAR UM ESQUEMA UTILIZAMOS A ESTRUTURA ABAIXO

EXEC('CREATE SCHEMA Pessoa') -- Criamos o esquema.

-- AGORA VAMOS COLOCAR A NOVA TABELA CRIADA DENTRO DESTE ESQUEMA

ALTER SCHEMA Pessoa TRANSFER EstadoProvincia

-- PRONTO, CRIAMOS UMA TABELA, SERÁ NECESSÁRIO REPLICAR ESSE MESMO CÓDIGO EM TODAS AS OUTRAS TABELAS.

-- PARA CRIAR O RELACIONAMENTO ENTRE TABELAS, UTILIZEI O SITE QUE INFORMEI ACIMA, E A PRÓPRIA TABELA ADVENTUREWORKS2017 COMO EXEMPLO.


-- NOS CASOS DE CRIAÇÃO DE FOREIGN KEY, UTILIZEI A ESTRUTURA " FK + NOME_TABELA_ATUAL + NOME_TABELA_REFERENCIA + NOME_COLUNA_TABELA_ATUAL_REFERENCIA ".
-- SENDO O NOME DA COLUNA DA TABELA ATUAL A COLUNA QUE FARÁ RELACIONAMENTO COM A OUTRA COLUNA DA OUTRA TABELA

ALTER TABLE Pessoa.EstadoProvincia
ADD CONSTRAINT FK_EstadoProvincia_RegiaoPais_CodigoPaisRegiao FOREIGN KEY (CodigoPaisRegiao) REFERENCES Pessoa.RegiaoPais(CodigoPaisRegiao)

-- PARA CRIAR AS PRIMARY KEY, SEGUI A MESMA LINHA DE RACIOCÍNIO.

ALTER TABLE Pessoa.EstadoProvincia
ADD CONSTRAINT PK_Endereco_IDEstadoProvincia PRIMARY KEY (IDEstadoProvincia)

/*
OBSERVAÇÃO: ANTES DE RELACIONAR AS TABELAS, É NECESSÁRIO VERIFICAR SE A TABELA QUE SERÁ REFERENCIADA POSSUI A PRIMARY KEY.

OBSERVAÇÃO: ALGUMAS TABELAS PODEM TER ATÉ 3 PRIMARY KEY, ISSO PERMITE QUE A TABELA POSSUA VALORES ÚNICOS.

OBSERVAÇÃO: O OBJETIVO DA CRIAÇÃO DESSA TABELA FOI CONSEGUIR UTILIZAR INSTRUÇÕES NO SQL SERVER PARA FAZER ANÁLISES NÃO TÃO ABSTRATAS DE MODO
QUE A ANÁLISE SEJA FEITA PRÓXIMA DO MUNDO REAL

*/